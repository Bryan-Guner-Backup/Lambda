window['wistiajsonp-/embed/medias/x2tjcik7r1.jsonp'] = {"media":{"assets":[{"type":"original","slug":"original","display_name":"Original file","details":{},"width":1920,"height":1080,"size":20493249,"bitrate":238,"public":true,"status":2,"progress":1.0,"metadata":{"served_by_media_api":1},"url":"https://embed-ssl.wistia.com/deliveries/c63b7e598646edada6d8225cf4348e8e.bin","created_at":1612463959},{"type":"iphone_video","slug":"mp4_h264_192k","display_name":"360p","details":{},"container":"mp4","codec":"h264","width":640,"height":360,"ext":"mp4","size":16558525,"bitrate":192,"public":true,"status":2,"progress":1.0,"metadata":{"max_bitrate":39257,"early_max_bitrate":32903,"average_bitrate":24625,"av_stream_metadata":"{\"Video\":{\"Codec ID\":\"avc1\"},\"Audio\":{\"Codec ID\":\"mp4a-40-2\"}}"},"url":"https://embed-ssl.wistia.com/deliveries/9292de3b8b3fd7f2e54b44ce7dd5f7ce7759da4b.bin","created_at":1612463959,"segment_duration":3,"opt_vbitrate":1200},{"type":"md_mp4_video","slug":"mp4_h264_340k","display_name":"1080p","details":{},"container":"mp4","codec":"h264","width":1920,"height":1080,"ext":"mp4","size":29317977,"bitrate":340,"public":true,"status":2,"progress":1.0,"metadata":{"max_bitrate":68337,"early_max_bitrate":68337,"average_bitrate":43600,"av_stream_metadata":"{\"Video\":{\"Codec ID\":\"avc1\"},\"Audio\":{\"Codec ID\":\"mp4a-40-2\"}}"},"url":"https://embed-ssl.wistia.com/deliveries/28bef4b4fe553a56a952ee7837f054eaaabb87e1.bin","created_at":1612463959,"segment_duration":3,"opt_vbitrate":500},{"type":"storyboard","slug":"storyboard_2000x2260","display_name":"Storyboard","details":{},"width":2000,"height":2260,"ext":"jpg","size":504427,"bitrate":0,"public":true,"status":2,"progress":1.0,"metadata":{"frame_width":200,"frame_height":113,"frame_count":200,"av_stream_metadata":"null","aspect_ratio":1.7777777777777777},"url":"https://embed-ssl.wistia.com/deliveries/1ba011baad35641f14c7b8253350e96b1ef6c51c.bin","created_at":1612463959},{"type":"still_image","slug":"still_image_3840x2160","display_name":"Image","details":{},"width":3840,"height":2160,"size":63598,"bitrate":0,"public":true,"status":2,"progress":1.0,"metadata":{"served_by_media_api":1},"url":"https://embed-ssl.wistia.com/deliveries/5000a62297e059431a28a1f8409e2ff8.bin","created_at":1613068052}],"distilleryUrl":"https://distillery.wistia.com/x","accountKey":"wistia-production_963575","mediaKey":"wistia-production_68206437","type":"Video","mediaType":"Video","progress":1.0,"status":2,"name":"CSS Specificity","duration":672.334,"hashedId":"x2tjcik7r1","branding":false,"enableCustomerLogo":true,"seoDescription":"a 01 - Web Fundamentals video","preloadPreference":null,"flashPlayerUrl":"https://embed-ssl.wistia.com/flash/embed_player_v2.0.swf?2017-04-20","showAbout":true,"createdAt":1612463959,"firstEmbedForAccount":false,"firstShareForAccount":false,"useMediaDataHostLogic":true,"projectId":5681166,"stats":{"loadCount":296,"playCount":143,"uniqueLoadCount":156,"uniquePlayCount":107,"averageEngagement":0.663077},"trackingTransmitInterval":22,"integrations":{},"captions":[{"language":"eng","text":"[Music]\n\nthis video is a continuation of our\n\nprevious lesson in that we learned a lot\n\nabout CSS selectors in the last one but\n\nwe spoke a lot about this important\n\nconcept of specificity so we're kind of\n\nlumping them together in the same realm\n\nwhere this is the part two of CSS\n\nspecificity where we rehash some ideas\n\nand learn a few others just to make sure\n\nthat you understand what's going on at\n\nthe end of the day\n\nat the end of this lesson you will be\n\nable to demonstrate CSS specificity and\n\ninheritance to create and update styles\n\nso we're actually going to continue on\n\nour follow along exercise that we wrote\n\nin our last program so let's go back\n\nover CSS inheritance what does the see\n\nin CSS stands for cascading style sheets\n\ncascading means that there is a pattern\n\nof inheritance that we can use in our\n\ncode this is similar to human\n\ncharacteristics that are passed down\n\nfrom generation to generation children\n\nwill inherit physical and personality\n\ntraits from their parents in CSS every\n\nancestor of the original parent will\n\ngain access to all the CSS properties\n\nthrough inheritance inheritance is\n\nachieved through HTML structure and when\n\nan element is placed inside another\n\nelement it becomes a child of that outer\n\nelement and of course nesting HTML\n\ncreates a bond so to speak between\n\nparent and child there is a built-in\n\nmechanism of inheritance between parent\n\nand child so when you nest an HTML\n\nelement with inside another one that\n\ninner element will get some of those\n\nstyles so an example of this is we could\n\nhave a div whose class is parent who\n\nwraps ap parent tag and a div whose\n\nclass is child and P tag div class of\n\ngrandchild so on and so forth we could\n\nget this whole inheritance pattern here\n\nbut notice the structuring of this code\n\nit looks kind of like a tree with you\n\nknow kind of these ideas or branches and\n\nand it's an ancestral tree if you were\n\nto sort of remap this and and map it out\n\nokay if we wanted to then style these\n\nelements we could just simply select\n\nparent and what do you think would\n\nhappen well the output of this code you\n\ncan go ahead and try it in your browser\n\nright now would be that parent child and\n\ngrandchild child all receive the color\n\nred\n\nso it goes back to this idea of CSS\n\nspecificity we touched at this at length\n\nin our previous video the ability to\n\nstyle many or just one element\n\nspecifically okay that's what\n\nspecificity means selectors allow us to\n\nadd HTML tags to update their Styles\n\nthink of it like a waterfall this\n\nwaterfall of ideas that cascade down\n\neach to the to the next one kind of that\n\nidea of that markup tree that we just\n\nsaw how each thing can be applied down\n\nthe waterfall many cascading waterfalls\n\nso let's review our selectors by weight\n\nbefore we dig into some code the first\n\none is the universal or the wildcard\n\nselector then we have element selectors\n\nwhen we're just simply selecting headers\n\nor footers or\n\ntags of course we have IDs and of course\n\nclasses pseudo classes and attributes\n\nand of course we also have inline styles\n\nwhich we didn't go over and our follow\n\nalong but there's a reason for that\n\nit's because we'll never use them and\n\nthen of course the important tag which\n\nwe demonstrated but we said hey don't\n\nuse that unless you know when to use it\n\nit's just one of those things that\n\nyou'll know when so let's see what this\n\nlooks like in some code go ahead and\n\nopen up that code sandbox from the\n\nprevious lesson because we're going to\n\ntweak it and we're gonna use it to write\n\nour own styles okay so for this tutorial\n\nwhat we're gonna do is we're actually\n\ngoing to be building some CSS selector\n\nchains to demonstrate specificity and\n\ninheritance okay so CSS specificity\n\nbegins with HTML structure let's go\n\nahead and let's take all of this and\n\ndelete it if you wanted to you could\n\nhave forked that one to have reference\n\nto it but if we go ahead and save that\n\nand run it we're just going to go back\n\nto our native HTML structure that we had\n\nbefore so now what we're gonna do is\n\nwe're going to check out how this\n\nspecificity is carried over with HTML at\n\nfirst so we can see that there is a\n\nclass that we call container ok if\n\nI was the style container we could it\n\nwould then affect the header the h1 the\n\nnav the anchor tags the entire\n\ngenerational tree of this document so\n\nlet's go ahead and write a selector a\n\nclass selector of container and let's\n\napply some styles to this we're going to\n\napply a width of 600 pixels and a margin\n\nof 0 top and bottom and auto left and\n\nright think about that what this is\n\ngoing to do in your head really quick\n\nwhat do you think this is going to do\n\nhow do you think it's going to turn out\n\ngo ahead and save it and run it and\n\nnotice that we just got some margin on\n\nour of a 0 on top and bottom and then\n\nAuto on our left and right so we added\n\nsome margins to this but if I were to\n\nselect this and inspect it we could pull\n\nup in the box model which we're going to\n\nlearn about later we could look at our\n\ncontainer and you can see that we now\n\nhave some margins of auto on the left\n\nand right and then 0 on the top and\n\nbottom so our top and bottom margins are\n\n0 and then left and right gets fifty\n\nthree point two units on the auto\n\nbecause our content is 600 pixels wide\n\nokay if we were to bump this content\n\ndown a little bit you'd see that we\n\nwould fit the page if we changed it to\n\n50% we would automatically sort of\n\nCenter this on our page across our\n\ndocument okay but let's keep it right\n\nwhere we want it let's go ahead and\n\nclose that and refresh and we should get\n\nour margins on the left and right so\n\nautomatically we sort of affected the\n\nrest of these things as well all of the\n\ncontent within container is now centered\n\non the page well so to speak it's\n\ncentered somewhat it's it's sort of\n\njustified a little bit okay so what\n\nwe're going to do now is we're going to\n\nthis is demonstrating the cascading\n\nimpact of all the elements inside the\n\ncontainer with just a few simple lines\n\nso let's increase our specificity chain\n\nby styling everything in the header to\n\nhave a font family of Helvetica so what\n\nI'm going to do is I'm actually going to\n\nsay not only inside of container so\n\neverything that's inside of container\n\nbut also everything inside of the header\n\nis going to get the font family\n\nHelvetica caps are important here and\n\nthen we can also kind of chain some\n\nthings on if the if the document or if\n\nthe browser doesn't have those fonts\n\nbuilt in we can default to San serif or\n\narielle so to speak\n\nokay notice how we're selecting things\n\nhere selecting by class and then by\n\nelement okay let's go ahead and save\n\nthat and run it and notice that all of\n\nour content changed all of our content\n\nwas affected so we could have wrote the\n\n[Music]\n\nbecause of this cascade all of our\n\nelements in our in our header now have a\n\nfont family of Helvetica we could have\n\nwritten this and we could have just\n\nselected the header but we wanted to\n\nsort of extend these styles to anything\n\nin the container as well okay so this is\n\ngood at all all of our items here inside\n\nof our little markup tree have received\n\nHelvetica as a font family\n\nso this is great knob but what if we\n\nwanted is to select one single element\n\nstyling mini elements is pretty easy\n\nbecause of the Cascade but what about\n\nstyling one specific element so let's\n\nselect the main header class and style\n\nits color to crimson so we're going to\n\ndo the same thing we're gonna say the\n\ncontainer and the header and then the\n\nmain header have a color of crimson\n\ncontainer main header sorry\n\nheader and just the main header will\n\nhave the crimson\n\nnotice that our other things were not\n\naffected we are specifically targeting\n\none single thing one item here so you\n\ncan chain your classes your selectors\n\njust like this it's really nice really\n\nhandy for selecting one single thing at\n\na time\n\nwe could have written the above chain\n\nwith an h1 and achieved the same result\n\nvirtually nothing changes\n\nbut if we wanted to be extremely\n\nspecific we could use both the element\n\nand the class together to achieve this\n\nso if we're just saying no matter what\n\nwe want this to be a very specifically\n\ntargeted main header you could write it\n\nlike this we're saying the h1 whose\n\nclass is main header gets this as well\n\nso we just did the same thing three\n\ndifferent ways with the same result some\n\ndevelopers see this as a powerful aspect\n\nof CSS others point this out as a reason\n\nCSS is so confusing our opinion is that\n\nyou should know several ways to do the\n\nsame thing in case you run into a unique\n\nsituation where you need to specified\n\nwhere you specify weight and and allow\n\nthat weight to be heavier at this point\n\nyou should attempt to style the anchor\n\ntags inside the navigation explore the\n\nseveral different ways you could write\n\nyour specificity chains\n\nfollow along with the link that's found\n\nin the tutorial here in training kit and\n\ncomplete that challenge if you get stuck\n\non anything you can check your code\n\nagainst the final solution for this\n\ntutorial and a link that's found right\n\nhere inside of training kit thanks for\n\ntuning in on our part 2 about\n\nspecificity and selectors we hope you're\n\nstarting to understand and feel that\n\nthis stuff is actually a lot of fun it's\n\nreally cool to apply these ideas these\n\nStyles these elements to our webpages"}],"hls_enabled":true,"embed_options":{"volumeControl":"true","fullscreenButton":"true","controlsVisibleOnLoad":"true","playerColor":"2d539d","bpbTime":"false","plugin":{"captions-v1":{"language":"","onByDefault":"true","on":"true","async":"false"}},"vulcan":"true","videoQuality":"","customerLogoImageUrl":"https://embed-ssl.wistia.com/deliveries/84ff8db598cacccd55aaec59e009e87c.bin","showCustomerLogo":"true","unalteredStillImageAsset":{"url":"https://embed-ssl.wistia.com/deliveries/5000a62297e059431a28a1f8409e2ff8.png","width":"3840","height":"2160"},"thumbnailAltText":"Classes","branding":"false","playsinline":true}},"options":{}};
window['wistiajsonp-/embed/medias/x2tjcik7r1.jsonp'] = window['wistiajsonp-/embed/medias/x2tjcik7r1.jsonp'];
