'use strict';const zoomView$$module$=(()=>{const a=[1,0,0,1,0,0],g=[1,0,0,1,0,0];var n=1;const d={top:0,left:0,right:200,bottom:200};var r=!0,q=1;const p={x:0,y:0},e={x:0,y:0};var f,l=0,m=0,h=!0;return{canvasDefault(){f.setTransform(1,0,0,1,0,0)},apply(){h&&this.update();f.setTransform(a[0],a[1],a[2],a[3],a[4],a[5])},getPosition(){return{x:l,y:m}},getContext(){return f},getBounds(){return d},getScale(){return n},getMaxScale(){return q},matrix:a,invMatrix:g,update(){h=!1;a[3]=a[0]=n;a[1]=a[2]=0;a[4]=
l;a[5]=m;r&&this.constrain();this.invScale=1/n;var b=a[0]*a[3]-a[1]*a[2];g[0]=a[3]/b;g[1]=-a[1]/b;g[2]=-a[2]/b;g[3]=a[0]/b},constrain(){q=Math.min(f.canvas.width/(d.right-d.left),f.canvas.height/(d.bottom-d.top));n<q&&(a[0]=a[3]=n=q);p.x=d.left;p.y=d.top;this.toScreen(p,e);0<e.x&&(a[4]=l-=e.x);0<e.y&&(a[5]=m-=e.y);p.x=d.right;p.y=d.bottom;this.toScreen(p,e);e.x<f.canvas.width&&(a[4]=l-=e.x-f.canvas.width);e.y<f.canvas.height&&(a[5]=m-=e.y-f.canvas.height)},toWorld(b,c){var k={};h&&this.update();b-=
a[4];c-=a[5];k.x=b*g[0]+c*g[2];k.y=b*g[1]+c*g[3];return k},toScreen(b,c={}){h&&this.update();c.x=b.x*a[0]+b.y*a[2]+a[4];c.y=b.x*a[1]+b.y*a[3]+a[5];return c},scaleAt(b,c,k){h&&this.update();n*=k;l=b-(b-l)*k;m=c-(c-m)*k;h=!0},move(b,c){l+=b;m+=c;h=!0},setContext(b){f=b;h=!0},setBounds(b,c,k,t){d.top=b;d.left=c;d.right=k;d.bottom=t;h=r=!0}}})();var $jscompDefaultExport$$module$=zoomView$$module$,module$={};module$.default=$jscompDefaultExport$$module$;